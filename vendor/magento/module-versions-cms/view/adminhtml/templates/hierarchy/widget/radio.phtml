<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

/** @var \Magento\VersionsCms\Block\Adminhtml\Cms\Hierarchy\Widget\Radio $block */

$uniqueHash = $block->escapeHtmlAttr($block->getUniqHash());
$uniqueId = $block->escapeHtmlAttr($block->getUniqId());
$parameters = $block->getParameters();
?>
<div id="<?= /* @noEscape */ $uniqueHash ?>_new" style="display:none;">
    <div style="margin: 10px 0;">
        <input type="radio" name="parameters[radio]" value="0" id="general_<?= /* @noEscape */ $uniqueHash ?>">
        <label for="general_<?= /* @noEscape */ $uniqueHash ?>"><?= $block->escapeHtml(__('Single Hierarchy for All Store Views')) ?></label>
    </div>

    <div style="margin: 10px 0;">
        <input type="radio" name="parameters[radio]" value="1" id="individual_<?= /* @noEscape */ $uniqueHash ?>">
        <label for="individual_<?= /* @noEscape */ $uniqueHash ?>"><?= $block->escapeHtml(__('Specific Hierarchy for Each Store View')) ?></label>
    </div>

    <?php foreach ($block->getAllStoreViewsList() as $store): ?>
        <?php $storeValue = $block->escapeHtmlAttr($store['value']) ?>
        <fieldset id="<?= /* @noEscape */ $uniqueHash ?>_<?= /* @noEscape */ $storeValue ?>" class="fieldset">
            <legend class="legend">
                <span><?= $block->escapeHtml(__('CMS Hierarchy for')) ?> <?= $block->escapeHtml($store['label']) ?></span>
            </legend>

            <div class="field">
                <label class="label" for="options_<?= /* @noEscape */ $uniqueHash ?>_anchor_text_<?= /* @noEscape */ $storeValue ?>"><?= $block->escapeHtml(__('Anchor Custom Text')) ?></label>
                <div class="control">
                    <input type="text" class="widget-option input-text" value="<?= $block->escapeHtmlAttr($block->getParamValue('anchor_text_' . $store['value'])) ?>" name="parameters[anchor_text_<?= /* @noEscape */ $storeValue ?>]" id="options_<?= /* @noEscape */ $uniqueHash ?>_<?= /* @noEscape */ $storeValue ?>anchor_text">
                    <div id="note_options_<?= /* @noEscape */ $uniqueHash ?>_<?= /* @noEscape */ $storeValue ?>anchor_text" class="note"><?= $block->escapeHtml(__('If this value is empty, the node or page name will be used.')) ?></div>
                </div>
            </div>

            <div class="field">
                <label class="label" for="options_<?= /* @noEscape */ $uniqueHash ?>_<?= /* @noEscape */ $storeValue ?>title"><?= $block->escapeHtml(__('Anchor Custom Title')) ?></label>
                <div class="control">
                    <input type="text" class="widget-option input-text" value="<?= $block->escapeHtmlAttr($block->getParamValue('title_' . $store['value'])) ?>" name="parameters[title_<?= /* @noEscape */ $storeValue ?>]" id="options_<?= /* @noEscape */ $uniqueHash ?>_<?= /* @noEscape */ $storeValue ?>title">
                </div>
            </div>

            <div class="field required">
                <label class="label"><span><?= $block->escapeHtml(__('Node')) ?></span></label>
                <div class="control">
                    <input style="display:none;" type="text" class="widget-option required-entry" value="<?= $block->escapeHtmlAttr($block->getParamValue('node_id_' . $store['value'])) ?>" name="parameters[node_id_<?= /* @noEscape */ $storeValue ?>]" id="<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>value" />
                    <label id="<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>label" class="widget-option-label"><?= $block->escapeHtml(__('Not Selected')) ?></label>
                    <div class="hidden" id="<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>advice-container"></div>
                </div>
            </div>

            <div class="field">
                <label class="label"for="chooseroptions_<?= /* @noEscape */ $uniqueHash ?>_node_id_<?= /* @noEscape */ $storeValue ?>"></label>
                <div class="control">
                    <span id="chooseroptions_<?= /* @noEscape */ $uniqueHash ?>_<?= /* @noEscape */ $storeValue ?>node_id"></span>
                    <button onclick="<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>.choose()" class="scalable btn-chooser" type="button" id="<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>control"><span><?= $block->escapeHtml(__('Select a page or node.')) ?></span></button>
                </div>
            </div>
        </fieldset>
    <?php endforeach; ?>
</div>

<script>
    //<![CDATA[
    require([
        'prototype',
        'mage/adminhtml/wysiwyg/widget',
        'domReady!'
    ], function(){
        <?php $uniqueId = $block->escapeJs($uniqueId) ?>
        <?php foreach ($block->getAllStoreViews() as $store): ?>
        <?php $storeValue = $block->escapeJs($store['value']) ?>
        <?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?> = new WysiwygWidget.chooser("<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>", "<?= $block->escapeUrl($block->getUrl('*/cms_hierarchy_widget/chooser', ['uniq_id' => $uniqueId . '_' . $store['value'], 'scope_id' => $store['value'], 'scope' => ($store['value'] == 0) ? 'default' : 'store']));?>", {"buttons":{"open":"Select a page or node.","close":"Close"}});
        if ($("<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>value")) {
            $("<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>value").advaiceContainer = "<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>advice-container";
        }
        $('<?= /* @noEscape */ $uniqueId ?>_<?= /* @noEscape */ $storeValue ?>label').update('<?= $block->escapeHtml($block->getLabelByNodeId($block->getParamValue('node_id_' . $store['value']))) ?>');
        <?php endforeach; ?>
        var storesArray = [<?= $block->escapeJs(implode($block->getAllStoreViewIds(), ',')) ?>];

        var changeHierarchyArray = [];
        function changeHierarchy()
        {
            var selector = $('page_store_id') ? 'page_store_id' : 'store_ids';
            changeHierarchyArray = $(selector) && 'object' == typeof $F(selector) ? $F(selector) : storesArray;
            showHierarchy();
        }

        function addClassEnable(storeId)
        {
            $('options_<?= /* @noEscape */ $uniqueHash ?>_'+storeId+'anchor_text').enable();
            $('options_<?= /* @noEscape */ $uniqueHash ?>_'+storeId+'title').enable();
            $('<?= /* @noEscape */ $uniqueId ?>_'+storeId+'value').enable();

            $('<?= /* @noEscape */ $uniqueId ?>_'+storeId+'value').addClassName('required-entry');
        }

        function showHierarchy()
        {
            var a = $$('div [id^="<?= /* @noEscape */ $uniqueHash ?>_"]');
            a.each(function(div){
                div.hide();
            });
            storesArray.each(function(valId){
                $('options_<?= /* @noEscape */ $uniqueHash ?>_'+valId+'anchor_text').disable();
                $('options_<?= /* @noEscape */ $uniqueHash ?>_'+valId+'title').disable()
                $('<?= /* @noEscape */ $uniqueId ?>_'+valId+'value').disable();

                $('<?= /* @noEscape */ $uniqueId ?>_'+valId+'value').removeClassName('required-entry');
            });
            if ($('general_<?= /* @noEscape */ $uniqueHash ?>').checked) {
                $('<?= /* @noEscape */ $uniqueHash ?>_0').show();
                addClassEnable(0);
            } else if ($('individual_<?= /* @noEscape */ $uniqueHash ?>').checked) {
                var showAll = false;
                changeHierarchyArray.each(function(id){
                    if (id == 0) {
                        showAll = true;
                        a.each(function(div){
                            div.show();
                        });
                        storesArray.each(function(id){
                            if (id != 0) {
                                $('<?= /* @noEscape */ $uniqueHash ?>_'+id).show();
                                addClassEnable(id);
                            }
                        });
                    }
                });

                changeHierarchyArray.each(function(id){
                    if (id != 0) {
                        $('<?= /* @noEscape */ $uniqueHash ?>_'+id).show();
                        addClassEnable(id);
                    }
                });
                $('<?= /* @noEscape */ $uniqueHash ?>_0').hide();
            }
        }

        function hideOldHierarchy()
        {
            // Copy cms hierarchy content out of generic widget content
            $('html-body').insert({
                top: new Element('div', {id: 'tempnew_<?= /* @noEscape */ $uniqueHash ?>_tempnew'}).update($('<?= /* @noEscape */ $uniqueHash ?>_new').innerHTML)
            });
            // Remove generic widget content that is not relevant for cms hierarchy widget
            var fieldsetElement = $('options_<?= /* @noEscape */ $uniqueHash ?>');
            fieldsetElement.update("");
            // Insert cms hierarchy specific content into fieldset
            var tempNewElement = $('tempnew_<?= /* @noEscape */ $uniqueHash ?>_tempnew');
            fieldsetElement.insert({
                top: new Element('div', {id: 'real_<?= /* @noEscape */ $uniqueHash ?>_real', class: 'admin__scope-old'}).update(tempNewElement.innerHTML)
            });
            tempNewElement.remove();
        }

        var onLoadCallback = function() {
            $('<?= /* @noEscape */ $uniqueHash ?>_0').insert({after:$('individual_<?= /* @noEscape */ $uniqueHash ?>').up()});
            hideOldHierarchy();

            if ($('store_ids')) {
                $('store_ids').observe('change', changeHierarchy);
            }

            <?php if (isset($parameters['radio']) && $parameters['radio']): ?>
            $('individual_<?= /* @noEscape */ $uniqueHash ?>').checked = true;
            <?php else: ?>
            $('general_<?= /* @noEscape */ $uniqueHash ?>').checked = true;
            <?php endif; ?>

            changeHierarchy();

            $('general_<?= /* @noEscape */ $uniqueHash ?>').observe('click', showHierarchy);
            $('individual_<?= /* @noEscape */ $uniqueHash ?>').observe('click', showHierarchy);
            showHierarchy();
        };

        window.onLoadCallback = onLoadCallback;
        window.hideOldHierarchy = hideOldHierarchy;
        window.showHierarchy = showHierarchy;
        window.addClassEnable = addClassEnable;
        window.changeHierarchy = changeHierarchy;

        window.changeHierarchyArray = changeHierarchyArray;
        window.storesArray = storesArray;

        onLoadCallback();
    });
//]]>
</script>
